%
% pdfanim_temp: a LaTeX package to create animated PDFs with pdfTeX
%
% version 0052A
% date 20061128
%
% by: Jochen Skupin, with modifications by Robert Marik and John Bowman
% email: jochen.skupin@uni-bremen.de
%
% Note: This interim version will become OBSOLETE once the next official
% release of pdfanim 0.53 is released.
%
% History:
% 
% 20030323 new
% 20030324 more than one animation per file
%          set width, height and depth of animation
% 20030330 implement options using keyval package
% 20030426 tested setting of \pageattr 
%          (not yet optimal, see pdfanim_alternatives.sty)
% 20030427 implementation most of the javascript on document level 
%          instead of pagelevel,
%          implementation of options: reverse, startframe, use
% 20030503 implementation of options: usecnt
% 20030510 implementation of options: debug
% 20030511 enclose document in \begin{Form} \end{Form}
% 20040311 first steps for an official release
% 20040520 insert picture as fallback for xpdf 
%          (activated using option fallback)
% 20040523 set pageattributes with everyshi.sty,
%          options: JSdisable, defaultframe
% 20040529 options: scale, scaletype
% 20040607 shift PDFAnimLoad to preamble to be able to 
%          prepare JavaScript before first page 
%          (workaround to allow animations when started from
%          shell with acroread file.pdf)
% 20040613 package options: NoDocJS, NoPageJS
% 20040622 fixed Form bug (should run without hyperref now)
% 20041214 disable focus rectangle
% 20061128 Robert Marik's single-input-file (modified by John Bowman to be
%          invoked via option) and pause-on-click patch
%
\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{pdfanim_temp}[2006/11/26 v0.52A Package to create animated PDFs with pdflatex]
  
\begingroup
\@ifundefined{pdfoutput}
    {\PackageError{PDFAnim_temp}
            {You're either not using pdfLaTeX\MessageBreak
             or have turned off PDF output.\MessageBreak
             `PDFAnim_temp' works only with pdfLaTeX\MessageBreak
             and PDF output}%
            {Use `pdflatex' instead of `latex'\MessageBreak
             and set output to PDF (use: \pdfoutput = 1)!}
     \expandafter\endinput
    }{
     \ifnum\pdfoutput=0
	 \PackageError{PDFAnim_temp}
        	 {You don't produce PDF output, which\MessageBreak
        	  is required for the `PDFAnim_temp' package}%
        	 {Set output to PDF. (use: \pdfoutput = 1)}
         \expandafter\endinput
     \fi
    }
\endgroup

\RequirePackage{keyval}
\RequirePackage{everyshi}

%\RequirePackage{hyperref}%[2001/05/26]
% only provides \begin{Form} ... \end{Form}, not really necessary

\def\PDFAnim@true{true}
\def\PDFAnim@false{false}
\def\PDFAnim@boolkey#1#2{%
  \lowercase{\def\PDFAnim@tempa{#1}}%
  \ifx\PDFAnim@tempa\@empty
    \let\PDFAnim@tempa\PDFAnim@true
  \fi
  \ifx\PDFAnim@tempa\PDFAnim@true
  \else
    \ifx\PDFAnim@tempa\PDFAnim@false
    \else
      \let\PDFAnim@tempa\@empty
    \fi
  \fi
  \ifx\PDFAnim@tempa\@empty
    \PackageWarning{PDFAnim}{`#2' should be `true' or `false'}%
  \else
% just for debugging
%    \PackageInfo{PDFAnim}{Option `#2' set `\PDFAnim@tempa'}%
    \csname PDFAnim@#2\PDFAnim@tempa\endcsname
  \fi
}

% package options
% ---------------

% disable creation of
% document level javascript
\newif\ifPDFAnim@NoDocJS
\PDFAnim@NoDocJSfalse
\DeclareOption{NoDocJS}{\PDFAnim@NoDocJStrue}

% disable automatic inclusion of
% javascript in PageOpen/CloseAttribute
\newif\ifPDFAnim@NoPageJS
\PDFAnim@NoPageJSfalse
\DeclareOption{NoPageJS}{\PDFAnim@NoPageJStrue}

\ProcessOptions\relax


% boolean keyval switches
% -----------------------

% single file input
\newif\ifPDFAnim@single
\PDFAnim@singlefalse
\define@key{PDFAnim}{single}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{single}%
}

% auto start animation
\newif\ifPDFAnim@auto
\PDFAnim@autofalse
\define@key{PDFAnim}{auto}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{auto}%
}

% enable debug messages
\newif\ifPDFAnim@debug
\PDFAnim@debugfalse
\define@key{PDFAnim}{debug}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{debug}%
}

% include startpicture below PictureButton
% as fallback solution for xpdf, macs ...
% (gives poor animation results)
\newif\ifPDFAnim@fallback
\PDFAnim@fallbackfalse
\define@key{PDFAnim}{fallback}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{fallback}%
}

% create hidden PictureButton
% (mostly for internal use) 
\newif\ifPDFAnim@hidden
\PDFAnim@hiddenfalse
\define@key{PDFAnim}{hidden}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{hidden}%
}

% loop animation
\newif\ifPDFAnim@loop
\PDFAnim@loopfalse
\define@key{PDFAnim}{loop}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{loop}%
}

% don't recognize clicks on PictureButton
\newif\ifPDFAnim@noclick
\PDFAnim@noclickfalse
\define@key{PDFAnim}{noclick}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{noclick}%
}

% remember last displayed picture when
% changing to another page
\newif\ifPDFAnim@remember
\PDFAnim@rememberfalse
\define@key{PDFAnim}{remember}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{remember}%
}

% play animation in reversed order
\newif\ifPDFAnim@reverse
\PDFAnim@reversefalse
\define@key{PDFAnim}{reverse}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{reverse}%
}

% advance animation on every mouseclick
\newif\ifPDFAnim@step
\PDFAnim@stepfalse
\define@key{PDFAnim}{step}[true]{%
  \lowercase{\PDFAnim@boolkey{#1}}{step}%
}

% keyval options that take parameters
% -----------------------------------

% bordercolor of PictureButton
\let\PDFAnim@bcolor\@empty
\define@key{PDFAnim}{bcolor}{%
  \def\PDFAnim@bcolor{#1}%
}

% backgroundcolor of PictureButton
\let\PDFAnim@bgcolor\@empty
\define@key{PDFAnim}{bgcolor}{%
  \def\PDFAnim@bgcolor{#1}%
}

% select frame to display when animation not yet running
\def\PDFAnim@defaultframe{0}
\define@key{PDFAnim}{defaultframe}{%
  \def\PDFAnim@defaultframe{#1}%
}

% depth of PictureButton
\let\PDFAnim@depth\@empty
\define@key{PDFAnim}{depth}{%
  \def\PDFAnim@depth{#1}%
}

% set extension of included pictures
% (till now only pdf works)
\def\PDFAnim@extension{pdf}
\define@key{PDFAnim}{extension}{%
  \def\PDFAnim@extension{#1}%
}

% height of PictureButton
\let\PDFAnim@height\@empty
\define@key{PDFAnim}{height}{%
  \def\PDFAnim@height{#1}%
}

% set interval in ms between animation frames
% (only shows effect if interval is longer than
% the time needed to display a frame)
\def\PDFAnim@interval{100}
\define@key{PDFAnim}{interval}{%
  \def\PDFAnim@interval{#1}%
}

% name PictureButton
% (may be usefull for further editing of the pdf,
% not needed by PDFAnim)
\let\PDFAnim@name\@empty
\define@key{PDFAnim}{name}{%
  \def\PDFAnim@name{#1}%
}

% javascript action to perform on mouseclick
% (mostly for internal use)
\let\PDFAnim@onclick\@empty
\define@key{PDFAnim}{onclick}{%
  \def\PDFAnim@onclick{#1}%
}

% scaling of picture used in PictureButton
%   A Always scale. 
%   B Scale only when the icon is bigger than the annotation rectangle. 
%   S Scale only when the icon is smaller than the annotation rectangle. 
%   N Never scale.
\def\PDFAnim@scale{A}
\define@key{PDFAnim}{scale}{%
  \def\PDFAnim@scale{#1}%
}

% type of scaling of picture used in PictureButton
% A Anamorphic scaling: scale the icon to  ll the annotation rectangle
%   exactly, without regard to its original aspect ratio (ratio of width to
%   height). 
% P Proportional scaling: scale the icon to  t the width or
%   height of the annotation rectangle while maintaining the icon s
%   original aspect ratio. If the required horizontal and vertical scaling
%   factors are different, use the smaller of the two, centering the icon
%   within the annotation rectangle in the other
%   dimension.
\def\PDFAnim@scaletype{A}
\define@key{PDFAnim}{scaletype}{%
  \def\PDFAnim@scaletype{#1}%
}

% use pictures from other animation
% (to save memory)
\let\PDFAnim@use\@empty
\define@key{PDFAnim}{use}{%
  \def\PDFAnim@use{#1}%
}

% use counter from other animation
\let\PDFAnim@usecnt\@empty
\define@key{PDFAnim}{usecnt}{%
  \def\PDFAnim@usecnt{#1}%
}

% select first frame to display
\def\PDFAnim@startframe{0}
\define@key{PDFAnim}{startframe}{%
  \def\PDFAnim@startframe{#1}%
}

% width of PictureButton
\let\PDFAnim@width\@empty
\define@key{PDFAnim}{width}{%
  \def\PDFAnim@width{#1}%
}

\ProcessOptions

% exported routines and variables
% -------------------------------

% define counter for number of animations
\newcounter{PDFAnimNr}
\setcounter{PDFAnimNr}{0}
\newcount \mujcounter
\xdef\PDFAnimNr{\thePDFAnimNr}%

% declare picture button analog to 
% PushButton in hyperref.sty and hpdftex.def
\newcommand*{\PDFAnimPictureButton}{%
  \@ifnextchar[{\PDFAnim@PictureButton}{\PDFAnim@PictureButton[]}%
}

% load animation 
% (this can be done anywhere in the document before
% the first \PDFAnimation call)
%
% arguments:
%   - name of the animation (with this name it can be reused
%     several times in one document)
%   - first part of file name (xxx)
%   - number n of animation frames i.e. files 
% the animation will be composed of files 
% xxx0.pdf, xxx1.pdf ... xxx(n-1).pdf
%
%\gdef\PDFAnim@hide#1{{\sbox0{#1}\dp0=0pt \ht0=0pt \wd0=0pt \box0}}
%\gdef\PDFAnim@hide#1{\vbox to 0pt{\hbox to 0pt{#1}}}
%\gdef\PDFAnim@hide#1{\vbox to\z@{\hb@xt@\z@{#1\hss}\vss}%\par\vskip -\parskip\vskip -\baselineskip}
\newcommand*{\PDFAnimLoad}[4][]{%
%  \vbox to\z@{\hb@xt@\z@{%
    \@PDFAnimLoad[#1]{#2}{#3}{#4}%\hss}\vss}%
  }

\renewcommand*{\PDFAnimLoad}[4][]{%
%  \vbox to\z@{\hb@xt@\z@{%
%\message{soubor je #3 ^^J}
\expandafter\edef\csname LastFrame#2\endcsname{#4}
    \@PDFAnimLoad[#1]{#2}{#3}{#4}%\hss}\vss}%
  }

\newif\ifPDFAnim@checkshift
\PDFAnim@checkshifttrue
\define@key{PDFAnim}{noshift}[true]{%
  \PDFAnim@checkshiftfalse
}

% place hidden part of animation 
\newcommand*{\PDFAnimationHidden}[1]{%
  \ifPDFAnim@debug
    \message{PDFAnim: using animation dummy }\message{#1}%
  \fi%
%  \PDFAnim@pageopencloseJS%  
  \expandafter\ifx\csname PDFAnimation@#1@h\endcsname\@empty%
  \else%
    \count@=0
    \@whilenum\count@<\csname PDFAnimation@#1@frames\endcsname\do{%
      \csname PDFAnimation@#1@h\endcsname{\number\count@}%
      \advance\count@\@ne}%
    \expandafter\xdef\csname PDFAnimation@#1@frames\endcsname{-1}%
  \fi%
}

% use animation 
\newcommand*{\PDFAnimation}[1]{%
%  \PDFAnim@pageopencloseJS%  
  \PDFAnimationHidden{#1}%
  \csname PDFAnimation@#1\endcsname%
}

% enable javascript in pageattribute of current page
\newcommand*{\PDFAnimJSPageEnable}{%
  \AtNextShipout{\PDFAnim@pageopencloseJS}%
}

% enable javascript in pageattribute on all following pages
\newcommand*{\PDFAnimJSEnable}{%
  \EveryShipout{\PDFAnim@pageopencloseJS}%
}

% disable javascript in pageattribute of current page
\newcommand*{\PDFAnimJSPageDisable}{%
  \AtNextShipout{\PDFAnim@clearpageopenclose}%
}

% disable javascript in pageattribute on all following pages
\newcommand*{\PDFAnimJSDisable}{%
  \EveryShipout{\PDFAnim@clearpageopenclose}%
}


% internal routines
% -----------------

\gdef\PDFAnimJS@def #1#2{%
  \expandafter\xdef \csname PDFAnimationJS@#1\endcsname{#2}}
\gdef\PDFAnimOpen@def #1#2{%
  \expandafter\xdef \csname PDFAnimationOpen@#1\endcsname{#2}}
\gdef\PDFAnimClose@def #1#2{%
  \expandafter\xdef \csname PDFAnimationClose@#1\endcsname{#2}}
\gdef\PDFAnim@localdef #1#2{%
  \expandafter\def \csname PDFAnimation@#1\endcsname{#2}}
\gdef\PDFAnim@def #1#2{%
  \expandafter\xdef \csname PDFAnimation@#1\endcsname{#2}}
\gdef\PDFAnim@argdef #1#2{%
  \expandafter\xdef \csname PDFAnimation@#1\endcsname##1{#2}}
\gdef\PDFAnim@append#1#2{\xdef#1{#1 #2}}
\gdef\PDFAnim@add#1#2{\gdef#1{#1 #2}}

\def\PDFAnim@LayoutPictureButtonField#1{\mbox{#1}}

\def\PDFAnim@PictureButtonWidget#1{%
  /Subtype /Widget
  \ifPDFAnim@hidden /F 6 \else /F 4 \fi
  \ifPDFAnim@step
  \ifPDFAnim@checkshift
  /TU(Click for the next frame. Shift+Click for previous frame.)
  \else
  /TU(Click for the next frame.)
  \fi
  \else
  \ifPDFAnim@checkshift
  /TU(Click to play. Shift+Click to play backwards.)
  \else
  /TU(Click to play.)
  \fi
  \fi
  \ifx\PDFAnim@name\@empty
  \else
    /T (\PDFAnim@name)
  \fi
  /FT /Btn
  /Ff 65536
  /H /N
  /BS << /W 1 /S /S >>
  /MK <<
    /TP 1
    /I #1 0 R
    /IF << /SW /\PDFAnim@scale /S /\PDFAnim@scaletype /A [0.5 0.5] >>
    \ifx\PDFAnim@bcolor\@empty
    \else
      /BC [\PDFAnim@bcolor]
    \fi 
    \ifx\PDFAnim@bgcolor\@empty
    \else
      /BG [\PDFAnim@bgcolor]
    \fi 
  >>
  \ifx\PDFAnim@onclick\@empty
  \else
    /A << /S /JavaScript /JS (\PDFAnim@onclick;) >>
  \fi 
}

\def\PDFAnim@PictureButton[#1]#2#3{% parameters, picture file name,page
%  \message{PDFanimpicturebutton #1; #2; #3^^J}
  \bgroup
  \mujcounter=#3
  \advance \mujcounter by 1
    \setkeys{PDFAnim}{#1}%
%     \ifPDFAnim@checkshift
%     \expandafter\xdef\csname checkshift#2\endcsname##1{##1}
%     \else
%     \expandafter\xdef\csname checkshift#2\endcsname##1{}
%     \fi
    \immediate\pdfximage
      \ifx\PDFAnim@width\@empty\else width \PDFAnim@width\fi 
      \ifx\PDFAnim@height\@empty\else height \PDFAnim@height\fi
      \ifx\PDFAnim@depth\@empty\else depth \PDFAnim@depth\fi
      page \mujcounter
      {#2}%
    \def\PDFAnim@Obj{\the\pdflastximage}%
    \PDFAnim@LayoutPictureButtonField{%
      \leavevmode
      \pdfstartlink user{\PDFAnim@PictureButtonWidget{\PDFAnim@Obj}}%
      \ifPDFAnim@hidden
        \phantom{\pdfrefximage\PDFAnim@Obj}%
      \else
        \ifPDFAnim@fallback
	  \pdfrefximage\PDFAnim@Obj%
	\else
          \phantom{\pdfrefximage\PDFAnim@Obj}%
	\fi
      \fi
      \pdfendlink
    }%
  \egroup
}

\newcommand*{\@PDFAnimLoad}[4][]{% options, name, file, number of frames
  \bgroup
  \def\PDFAnim@defaultframe{0}
  \setkeys{PDFAnim}{#1}%  
  \expandafter\xdef\csname #2PDFAnim@DefaultFrame\endcsname{\PDFAnim@defaultframe}
  \ifPDFAnim@auto
  \expandafter\gdef\csname#2PDFauto\endcsname{Pause}
  \else
  \expandafter\gdef\csname#2PDFauto\endcsname{Play}
  \fi
  \makeatletter
  \expandafter\xdef\csname #2PDFDelayInterval\endcsname{\PDFAnim@interval}
  \ifx\PDFAnim@usecnt\@empty
  \else
  \def\PDFAnim@startframe{\PDFAnim@usecnt cnt}%
  \fi
  \ifx\PDFAnim@use\@empty
  \def\PDFAnim@UseName{#2h}%
  \PDFAnim@argdef{#2@h}{%
    \noexpand\PDFAnimPictureButton[	
    width=0pt,
    height=0pt,
    depth=0pt,,
    name=#2h##1,
    hidden=true
\ifPDFAnim@single
    ]{#3.\PDFAnim@extension}{##1}%
\else
    ]{#3##1.\PDFAnim@extension}{0}%
\fi
  }%
  \else
  \def\PDFAnim@UseName{\PDFAnim@use h}%
  \PDFAnim@argdef{#2@h}{}%
  \fi 
  \PDFAnim@def{#2}{%
    \noexpand\PDFAnimPictureButton[%
    #1,
    name=#2,
    onclick={
      \ifPDFAnim@noclick\else
      \ifPDFAnim@step
      if (#2running==1) #2PDFStopAnimation();        
      %%% stepwise animation
      % if (#2running == 0) 
      % {
      %   #2running = 1;
      %   #2cnt = \PDFAnim@startframe;
      % }
      \ifPDFAnim@checkshift
      #2eventshift = event.shift;
      \else
      #2eventshift = false;
      \fi
      \ifPDFAnim@reverse  % reverse
      if (#2eventshift) #2lr=true; else #2lr=false;
      \else % normal 
      if (#2eventshift) #2lr=false; else #2lr=true;
      \fi
      #2running=1;
      #2PDFAnimate();
      #2running=0;
      %%% not stepwise animation
      \else % nostep
      #2StartAnimation();
      \fi
      \fi
    }
\ifPDFAnim@single
  ]{#3.\PDFAnim@extension}{\PDFAnim@defaultframe}%
\else
  ]{#3\PDFAnim@defaultframe.\PDFAnim@extension}{0}%
\fi
}%
\PDFAnim@def{#2@frames}{#4}
\PDFAnimJS@def{\thePDFAnimNr}{%
  var #2running = 0;
  var #2cnt = \PDFAnim@defaultframe;
  var #2interval = \PDFAnim@interval;
  var #2eventshift = false;
  function #2StartAnimation(){
    try { 
      this.getField("#2procenta").readonly=true;
      this.getField("#2procenta").strokeColor=color.transparent;
    } catch (e) {}
    var PDFrun=true;
    \ifPDFAnim@checkshift
    #2eventshift = event.shift;
    \else
    #2eventshift = false;
    \fi
    \ifPDFAnim@reverse
    if ((#2running == 0)&&(#2cnt<=0)&&!(#2eventshift))
    {
      #2cnt=(#4-1);
      this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
      #2PDFAnimUpdateTextProc(#2cnt);
      PDFrun=false;
    }      
    if ((#2running == 0)&&(#2cnt>=(#4-1))&&(#2eventshift))
    {
      #2cnt=0;
      this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
      #2PDFAnimUpdateTextProc(#2cnt);
      PDFrun=false;
    }
    \else
    if ((#2running == 0)&&(#2cnt==0)&&(#2eventshift))
    {
      #2cnt=(#4-1);
      this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
      #2PDFAnimUpdateTextProc(#2cnt);
      PDFrun=false;
    }      
    if ((#2running == 0)&&(#2cnt>=(#4-1))&&!(#2eventshift))
    {
      #2cnt=0;
      this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
      #2PDFAnimUpdateTextProc(#2cnt);
      PDFrun=false;
    }
    \fi
    if (PDFrun)
    {
      if (#2running == 0)
      { % running==0 not runnning, we start the animation
        #2running = 1;
        try{
          this.getField("#2PlayStop").buttonSetCaption("Pause");
        } catch(e) {}
        if (!(#2eventshift))
        {
          \ifPDFAnim@reverse
          #2lr=false;
          #2PDFAnimKey = app.setInterval('#2PDFAnimate()', #2interval);
          \else
          #2lr=true;
          #2PDFAnimKey = app.setInterval('#2PDFAnimate()', #2interval);
          \fi
        } 
        else 
        {
          \ifPDFAnim@reverse
          #2lr=true;
          #2PDFAnimKey = app.setInterval('#2PDFAnimate()', #2interval);
          \else
          #2lr=false;
          #2PDFAnimKey = app.setInterval('#2PDFAnimate()', #2interval);
          \fi
        }
      }
      else
      { % animation runs, we make pause
        try{
          this.getField("#2PlayStop").buttonSetCaption("Play");
        } catch(e) {}
        #2running = 0; % 0=pause
        app.clearInterval(#2PDFAnimKey);
        try { 
          this.getField("#2procenta").readonly=false;
          this.getField("#2procenta").strokeColor=color.black;
        } catch (e) {}
      }
    }
  };
  function #2PDFAnimUpdateTextProc(framenumber){
    var hodnota= Math.floor(framenumber*100/(\csname LastFrame#2\endcsname-1));
    if (hodnota>100) hodnota=100;
    try{          
      this.getField("#2procenta").value = hodnota;
    } catch (e) {}
    try{
      this.getField("#2PlayStopProcenta").buttonSetCaption(hodnota+" \%");
    } catch(e) {}
  };
  function #2PDFStopAnimation()
  {
    #2running = 0; % 0=pause
    try{
        app.clearInterval(#2PDFAnimKey);
      } catch(e) {}
    try{
      this.getField("#2PlayStop").buttonSetCaption("Play");
    } catch(e) {}
    try { 
      this.getField("#2procenta").readonly=false;
      this.getField("#2procenta").strokeColor=color.black;
    } catch (e) {}
  };
  function #2PDFAnimate() {
    \ifPDFAnim@step\else % lock fields with percents
    try{
      this.getField("#2procenta").readonly=true;
      this.getField("#2procenta").strokeColor=color.transparent;
    } catch (e) {}
    \fi
    if (#2lr ==true) {#2cnt++;} else {#2cnt--;}
    if (#2cnt >= #4) {% out of upper bound
      \ifPDFAnim@loop
      #2cnt = 0;
      \else
      #2PDFStopAnimation();
      \fi	  
    }
    if (#2cnt < 0) {% out of lower bound
      \ifPDFAnim@loop
      #2cnt = #4 - 1;
      \else
      #2cnt=0;
      #2PDFStopAnimation();
      \fi	  
    }
    #2PDFAnimUpdateTextProc(#2cnt);
    this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
  };
}%  
% \fi%
\PDFAnimOpen@def{\thePDFAnimNr}{%
  \ifPDFAnim@remember\else%
  #2cnt = \PDFAnim@defaultframe;
  this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
  \fi%
  \ifPDFAnim@step\else%
  \ifPDFAnim@auto 
  if (#2running == 0) {
    #2cnt = \PDFAnim@startframe;
  }
  #2running = 1;
  \ifPDFAnim@reverse
  #2lr=false;
  \else
  #2lr=true;
  \fi
  #2PDFAnimKey = app.setInterval('#2PDFAnimate()', #2interval);
  \fi
  \fi      
}%  
\PDFAnimClose@def{\thePDFAnimNr}{%
  \ifPDFAnim@remember\else%
  if(#2running != 0) 
  {
    #2running = 0;
    app.clearInterval(#2PDFAnimKey);
  }
  #2cnt = \PDFAnim@defaultframe;
  this.getField('#2').buttonSetIcon(this.getField('\PDFAnim@UseName'+#2cnt).buttonGetIcon());
  \fi
}%   
\egroup%
\global\addtocounter{PDFAnimNr}{1}%
\xdef\PDFAnimNr{\thePDFAnimNr}%
% 
\ifPDFAnim@debug
\message{PDFAnim: defining animation }\message{\PDFAnimNr}%
\message{with document level javascript:}\message{\csname PDFAnimationJS@\PDFAnimNr@\endcsname}%
\fi%
% 
}

\def\PDFAnim@setpageopenclose#1#2{%}
  \global\pdfpageattr{%
    /AA << /O << /S /JavaScript /JS (#1) >> 
           /C << /S /JavaScript /JS (#2) >>
        >>
  }%
}

\def\PDFAnim@clearpageopenclose{%
  \global\pdfpageattr{%
    /AA << >>
  }%
}

\newcommand*{\PDFAnim@pageopencloseJS}{%
  \ifPDFAnim@NoDocJS%
    \edef\PDFAnim@pageattr{%
      \noexpand\PDFAnim@setpageopenclose{\PDFAnim@JavaScript PDFAnimPageOpen()}{PDFAnimPageClose()}}%
  \else%
    \edef\PDFAnim@pageattr{%
      \noexpand\PDFAnim@setpageopenclose{PDFAnimPageOpen()}{PDFAnimPageClose()}}%
  \fi%
  \PDFAnim@pageattr%
}

% create JavaScript routines
% --------------------------
\newcommand*{\PDFAnim@JavaScriptRoutines}{%
  % create javascript routines
  \gdef\PDFAnim@JavaScript{app.focusRect = false;}%
  \count@=0
  \@whilenum\count@<\PDFAnimNr\do{%
    \PDFAnim@append\PDFAnim@JavaScript{%
      \csname PDFAnimationJS@\number\count@\endcsname}%
    \advance\count@\@ne}%
  % javascript for openpage action
  \gdef\PDFAnim@pageattropen{}%
  \count@=0
  \@whilenum\count@<\PDFAnimNr\do{%
    \PDFAnim@append\PDFAnim@pageattropen{%
      \csname PDFAnimationOpen@\number\count@\endcsname}%
    \advance\count@\@ne}%
  \PDFAnim@append\PDFAnim@JavaScript{%
    function PDFAnimPageOpen() {\PDFAnim@pageattropen};
  }%
  % javascript for closepage action
  \gdef\PDFAnim@pageattrclose{}%
  \count@=0
  \@whilenum\count@<\PDFAnimNr\do{%
    \PDFAnim@append\PDFAnim@pageattrclose{%
      \csname PDFAnimationClose@\number\count@\endcsname}%
    \advance\count@\@ne}%
  \PDFAnim@append\PDFAnim@JavaScript{%
    function PDFAnimPageClose() {\PDFAnim@pageattrclose};
  }%
}

\newcommand*{\PDFAnim@JavaScriptDocLevel}{%
  % create document level javascript routines
  \immediate\pdfobj{ << /S /JavaScript /JS (\PDFAnim@JavaScript) >> }
  \immediate\pdfobj{ << /Names [(1 PDFAnim JavaScript) \the\pdflastobj\space 0 R ] >>}
  \pdfnames{/JavaScript \the\pdflastobj\space 0 R}%
}

% definitions for begin of document
% ---------------------------------

% \begin{Form} \end{Form} is the only part of hyperref
% of use for pdfanim, so if hyperref is loaded use them, 
% if hyperref is not loaded use own (simpler) definition
\ifx\@Form\@undefined% hyperref loaded?
  \def\@Form{%
    \pdfobj { << /Type /Encoding /Differences [ 24 /breve /caron
    /circumflex /dotaccent /hungarumlaut /ogonek /ring /tilde 39
    /quotesingle 96 /grave 128 /bullet /dagger /daggerdbl /ellipsis
    /emdash /endash /florin /fraction /guilsinglleft /guilsinglright
    /minus /perthousand /quotedblbase /quotedblleft /quotedblright
    /quoteleft /quoteright /quotesinglbase /trademark /fi /fl /Lslash /OE
    /Scaron /Ydieresis /Zcaron /dotlessi /lslash /oe /scaron /zcaron 164
    /currency 166 /brokenbar 168 /dieresis /copyright /ordfeminine 172
    /logicalnot /.notdef /registered /macron /degree /plusminus
    /twosuperior /threesuperior /acute /mu 183 /periodcentered /cedilla
    /onesuperior /ordmasculine 188 /onequarter /onehalf /threequarters 192
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
    /Idieresis /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde
    /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis
    /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde
    /adieresis /aring /ae /ccedilla /egrave /eacute /ecircumflex
    /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
    /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash
    /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis ] >>
    }
    \def\PDFAnim@pdfdocencoding{\the\pdflastobj}
    \pdfobj {  <<
      /Type /Font
      /Subtype /Type1
      /Name /Helv
      /BaseFont /Helvetica
      /Encoding \PDFAnim@pdfdocencoding\space 0 R
      >>
    }
    \def\PDFAnim@Helv{\the\pdflastobj}
    \pdfobj {
      <<
	/Fields []
	/DR <<
	  /Font << /Helv \PDFAnim@Helv\space0 R >>
	>>
	/DA (/Helv 10 Tf 0 g )
	/NeedAppearances true
      >>
    }
    \def\PDFAnim@acroform{\the\pdflastobj}
    \ifnum\pdftexversion>13
      \pdfrefobj\PDFAnim@acroform
    \fi
    \pdfcatalog{/AcroForm \PDFAnim@acroform\space 0 R}%
  }%
  \def\@endForm{}
\fi

% according to Heiko Oberdiek
% \begin{Form} \end{Form} has only to be called once
% anywhere in the document (even before \begin{document}),
% but according to my experience all Forms have to be
% enclosed in \begin{Form} \end{Form} to have all
% attributes set
\@ifundefined{AfterBeginDocument}{%
 \let\AfterBeginDocument\AtBeginDocument
 }{}%
\AfterBeginDocument{%
  \begin{Form}%
  \PDFAnim@JavaScriptRoutines%
  \ifPDFAnim@NoDocJS%
  \else%
    \PDFAnim@JavaScriptDocLevel%
  \fi%
  \ifPDFAnim@NoPageJS%
    \PDFAnimJSDisable%
  \else%
    \PDFAnimJSEnable%
  \fi%
}

%%%% \V{0} is the initial value 0 percent
\newcommand{\PDFProgressField}[4][]{
  \edef\temp{\csname LastFrame#2\endcsname}
  \textField[\V{}\Q{2}\textSize{0}
  \TU{Current position in animation. You may adjust it.}
  #1
  \AA{
    \AAKeystroke{
      if(event.willCommit&&(#2running!=1)) 
      {
        var pocetprocent=this.event.value;
        if (isNaN(pocetprocent)) 
        {
          app.alert("Enter a number!");
          pocetprocent=0;
          event.value=pocetprocent;
        }
        if (pocetprocent>100) 
        {
          pocetprocent=100;
          event.value=pocetprocent;
        }
        if (pocetprocent<0)
        {
          pocetprocent=0;
          event.value=pocetprocent;
        }
        #2cnt = Math.floor((\temp-1)*pocetprocent/100);
        if (#2cnt<0) #2cnt=0;
        if (#2cnt>(\temp-1)) #2cnt=(\temp-1);
        this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
        try{
          this.getField("#2PlayStopProcenta").buttonSetCaption(pocetprocent+" \%");
        } catch(e) {}        
      }
    }
  }
  ]{#2procenta}{#3}{#4}\,\%%
}

\newcommand\PDFAnimButtons[2][]{%
  \def\PDFAnimPlayButtonInit{\csname #2PDFauto\endcsname}%
  \def\PDFAnimPlayButtonName{#2PlayStop}%
  \@PDFAnimMakeButtons[#1]{#2}%
}
\newcommand\PDFAnimButtonsP[2][]{%
  \def\PDFAnimPlayButtonInit{\string\267\string\267\string\%}%
  \def\PDFAnimPlayButtonName{#2PlayStopProcenta}%
  \@PDFAnimMakeButtons[#1]{#2}%
}

\newcommand{\@PDFAnimMakeButtons}[2][]{%
  \pushButton[#1
  \CA{\string\253}
  \TU{First frame}
  \A{\JS{ 
      #2running=1;
      #2cnt = 0;
      this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
      try { 
        this.getField("#2procenta").readonly=false;
        this.getField("#2procenta").strokeColor=color.black;
      } catch (e) {}
      #2PDFAnimUpdateTextProc(#2cnt);
      #2PDFStopAnimation();
    }}
  ]{#2First}{12pt}{12pt}%
  % 
  \pushButton[#1
  \CA{\string\210}
  \TU{Previous frame}
  \A{\JS{ 
      #2running=1;
      #2cnt --;
      if (#2cnt<0) #2cnt=0;
      this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
      try { 
        this.getField("#2procenta").readonly=false;
        this.getField("#2procenta").strokeColor=color.black;
      } catch (e) {}
      #2PDFAnimUpdateTextProc(#2cnt);
      #2PDFStopAnimation();
    }}
  ]{#2Prec}{12pt}{12pt}%
  %
  \pushButton[#1
  \CA{\PDFAnimPlayButtonInit}
  \TU{Click to Play / Pause animation. Shift+Click plays backwards (if allowed).}
  \A{\JS{#2StartAnimation();}}]{\PDFAnimPlayButtonName}{30pt}{12pt}%
  % 
  \pushButton[#1
  \CA{\string\211}
  \TU{Next frame}
  \A{\JS{
      #2running=1;
      #2cnt ++;
      if (#2cnt>=\csname LastFrame#2\endcsname) #2cnt=(\csname LastFrame#2\endcsname - 1);
      this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
      try { 
        this.getField("#2procenta").readonly=false;
        this.getField("#2procenta").strokeColor=color.black;
      } catch (e) {}
      #2PDFAnimUpdateTextProc(#2cnt);
      #2PDFStopAnimation();
    }}
  ]{#2Next}{12pt}{12pt}%
  % 
  \pushButton[#1
  \CA{\string\273}
  \TU{Last frame}
  \A{\JS{ 
      #2running=1;
      #2cnt = \csname LastFrame#2\endcsname - 1;
      this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
      try { 
        this.getField("#2procenta").readonly=false;
        this.getField("#2procenta").strokeColor=color.black;
      } catch (e) {}
      #2PDFAnimUpdateTextProc(#2cnt);
      #2PDFStopAnimation();
  }}
  ]{#2Last}{12pt}{12pt}%
}

\def\defaultDelayIntName{Delay}

\newcommand\PDFAnimDelayButton[4][]{
  \pushButton
  [#1
  \TU{Click to increase for slower animation, Shift+Click to decrease.}
  \CA{\defaultDelayIntName}
  \RC{\csname #2PDFDelayInterval\endcsname}
  \AA{\AAMouseExit{\JS{
        this.getField("#2Interval").buttonSetCaption("\defaultDelayIntName");
      }}}
  \A{\JS{      
      if (event.shift) #2interval=#2interval-5;
      else #2interval=#2interval+5;
      if (#2interval<=0) #2interval = 5;
      this.getField("#2Interval").buttonSetCaption(#2interval,2);
      this.getField("#2Interval").buttonSetCaption(#2interval);
      if (#2running==1)
      {
        app.clearInterval(#2PDFAnimKey);
        #2PDFAnimKey = app.setInterval('#2PDFAnimate(true)', #2interval);
      }
    }}
  ]
  {#2Interval}{#3}{#4}
}

\newcommand\PDFAnimHomeButton[4][]{
  \pushButton
  [
  \TU{Click to set default frame.}
  \CA{\string\211\string\267\string\210}
  \A{\JS{
      if (#2running==1)
      {
        #2running=0;
        app.clearInterval(#2PDFAnimKey);
      }
      #2cnt=\csname #2PDFAnim@DefaultFrame\endcsname;
      this.getField('#2').buttonSetIcon(this.getField('#2h'+#2cnt).buttonGetIcon());
      #2running=1;
      #2PDFAnimUpdateTextProc(#2cnt);    
      #2running=0;
      #2PDFStopAnimation();
  }}
  #1
  ]
  {#2Home}{#3}{#4}
}

% definitions for end of document
% -------------------------------
\newcommand*{\PDFAnim@EndDoc}{%
  \end{Form}%
}

\AtEndDocument{%
%  \PDFAnim@JavaScriptDocLevel%
  \PDFAnim@EndDoc%
}
